services:
  earnyearn:
    build:
      context: ./svc/earnyearn
      dockerfile: ./Dockerfile
    restart: always
    depends_on:
      - purrstream
    networks:
      - purrnetwork
    volumes:
      - ./svc/earnyearn/:/app/
    environment:
      - APCA_API_KEY_ID=${APCA_API_KEY_ID}
      - APCA_API_SECRET_KEY=${APCA_API_SECRET_KEY}
      - APCA_ENVIRONMENT=${APCA_ENVIRONMENT}
      - EARNYEARN_ORDER_ENDPOINT=${EARNYEARN_ORDER_ENDPOINT}
      - FINNHUB_API_KEY=${FINNHUB_API_KEY}
      - TRADINGVIEW_SECRET=${TRADINGVIEW_SECRET}
  #slanger:
  #  build:
  #    context: ./svc/slanger
  #    dockerfile: ./Dockerfile
  #  volumes:
  #    - ./svc/slanger/:/app/
  #  ports:
  #    - 5000:5000
  #  environment:
  #    - APCA_API_KEY_ID=${APCA_API_KEY_ID}
  #    - APCA_API_SECRET_KEY=${APCA_API_SECRET_KEY}
  #    - APCA_ENVIRONMENT=${APCA_ENVIRONMENT}
  #    - NGROK_AUTH_TOKEN=${NGROK_AUTH_TOKEN}
  #    - NGROK_DOMAIN=${NGROK_DOMAIN}
  #    - NGROK_ENABLED=${NGROK_ENABLED}
  #    - TRADINGVIEW_SECRET=${TRADINGVIEW_SECRET}
  #  sentimentsheperd:
  #    build:
  #      context: ./svc/sentimentsheperd
  #      dockerfile: ./Dockerfile
  #    volumes:
  #      - ./svc/sentimentsheperd/:/app/
  #    environment:
  #      - AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
  #      - AWS_REGION=${AWS_REGION:-us-east-1}
  #      - APCA_API_KEY_ID=${APCA_API_KEY_ID}
  #      - APCA_API_SECRET_KEY=${APCA_API_SECRET_KEY}
  #      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
  #      - AWS_SESSION_TOKEN=${AWS_SESSION_TOKEN}
  #      - ENVIRONMENT=${ENVIRONMENT:-dev}
  #      - OPENAI_API_KEY=${OPENAI_API_KEY:-asdf}
  purrstream:
    build:
      context: ./svc/purrstream
      dockerfile: ./Dockerfile
    ports:
      - 8765:8765
    restart: always
    networks:
      - purrnetwork
    volumes:
      - ./svc/purrstream/:/app/
    environment:
      - APCA_API_KEY_ID=${APCA_API_KEY_ID}
      - APCA_API_SECRET_KEY=${APCA_API_SECRET_KEY}
      - APCA_ENVIRONMENT=${APCA_ENVIRONMENT}

networks:
  purrnetwork:
    driver: bridge
